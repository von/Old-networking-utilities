.TH NETLOG 3
.SH NAME
libnetlog \- Application layer network usage logger
.SH DESCRIPTION
.PP
The \fInetlog\fR library is a tool for analyzing the network usage
of a application. It is a wrapper for most of the standard C library
networking calls (socket(), send(), etc. See SUPPORTED CALLS for a
complete list). It interprets and records the arguments and results
as well as throughput for read and write calls.
.SH TO USE NETLOG
.PP
To use the \fInetlog\fR library the header file \fInetlog.h\fR must be
included in all the source code one is interested in analysising and
the library \fIlibnetlog.a\fR must be linked in.
.SH LOGGING
By default \fIlibnetlog.a\fR will log network activity in a file
called "./netlog.<hostname>.<pid>", where <hostname> is the hostname of
the host the process is running on and <pid> is it's process id. This
can be changed through the use of the NETLOGFILE environment variable.
.PP
When used in conjunction with the \fIloggerd\fR daemon, the logging can also
be done to a remote machine. See the description of the NETLOGFILE
environment variable later in this document for details.
.PP
\fIlibnetlog.a\fR tries to be intelligent and only log calls that are
actually acting on sockets (as opposed to files or pipes). It does this
by using getsockname(2) and checking for a ENOTSOCK error.
.PP
Each log entry has four fields. The first field is the time in seconds
since the start of log, which occurs at the first logged call. The second
field, in brackets, is the socket descriptor used by the logged call.
This number will be -1 if the call was attempting to create a socket
and it failed.  The third field is the call being logged and the fourth
field is call-specific information, generally arguments, results and
throughput information.
.PP
For example here is a socket call returning a descriptor of 3 and the log
entry for it generated by \fInetlog\fR:
.nf
.sp
.in +5
socket(PF_INET, SOCK_STREAM, 0);

0.203 [ 3] socket()        : INET, STREAM, ip(0)
.fi
.PP
.PP
A call may create more than one log entry if it involves more than one
socket (i.e. accept has both the original socket and the new connected
socket).
.PP
When \fInetlog\fR interprets an argument or result it will return a text
description if possible in which case it will return the numeric value as
well in parentheses. If it can't resolve a string it will return just a
numeric value.
.PP
Comments may be put into the log from the application by the use of the
netlog_comment() call. This will place an entry marked as a "COMMENT" into
the log. The exact declaration of netlog_comment() is:
.nf
.sp
.in +5
void netlog_comment(char *comment);
.fi
.PP
At the end of the log, assuming \fIlibnetlog.a\fR was able to get itself
called apon exit, it will write out the total number of bytes written
and read. 

.SH ENVIRONMENT VARIABLES
.TP 15
.SB NETLOGFILE
This variable may be used to specify the destination of the logging
information. Either a file or a socket connection to a loggerd daemon
may be specified. See the section on LOGFILE SPECIFICATION below for
details.
.TP
.SB NETLOGFLUSH
If set, this causes \fIlibnetlog.a\fR to flush the logfile to disk
after every entry. This can cause a larger performance hit, but can
help make sure all entries are written out if the application is
crashing.
.PD
.SH LOGFILE SPECIFICATION
.PP
To log to a file on the local filesystem format of the NETLOGFILE variable
should be:
.in+5
 "file:<filename>"
.fi
.PP
This will create (or append to, if the file already exists) a file in the
local filesystem and store the logging information in that file. By default
a filename of "netlog.%h.%p" will be used.
.PP
Characters preceded by a percent are expnaded at runtime into the following:
.nf
.in +5
%h     hostname
%p     process id
%u     user id
.fi
.PP
For a connection to a loggerd daemon the format of the NETLOGFILE variable
should be:
.in +5
 "socket:<filename>:<hostname>:<port>"
.fi
.PP
All arguments are optional. If not specified they default to the following:
.nf
.in +5
filename       netlog.%h.%p
hostname       localhost
port           5555
.fi
.PP
\fIloggerd\fR will log the file on it's local filesystem. \fINOTE:\fR for security
reasons \fIloggerd\fR will only create files in it's current directory. Any path
in the filename will be stripped by the daemon.
.PD
.SH LOGGERD
Currently \fIloggerd\fR is in fairly crude form. It supports no command line
options and will spit any error messages to standard error.
.SH SUPPORTED CALLS
.BR accept(),
.BR bind(),
.BR close(),
.BR connect(),
.BR listen(),
.BR recv(),
.BR recvfrom(),
.BR recvmsg(),
.BR read(),
.BR readv(),
.BR send(),
.BR sendmsg(),
.BR sendto(),
.BR setsockopt(),
.BR shutdown(),
.BR socket(),
.BR socketpair(),
.BR write(),
.BR writev() 
.SH ERRORS
If \fInetlog\fR encounters fatal errors (usually this involves not being able
to write to the log file) it will output an explanation to standard error and
call exit() with a value of 1.
.SH AUTHOR
Von Welch (vwelch@ncsa.uiuc.edu), National Center for Supercomputing
Applications, University of Illinois
.SH BUGS
No doubt. Send reports to vwelch@ncsa.uiuc.edu
.SH FILES
.PD 0
.TP 30
.B ./netlog.*
Default netlog log files.
.TP
.B netlog.h
Header file to be included in source code.
.TP
.B libnetlog.a
netlog library file.
.TP
.B loggerd
netlog remote logging daemon.
.TP
